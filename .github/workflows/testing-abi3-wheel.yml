name: Unit Tests

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash -l {0}

jobs:
  build_wheel_once_per_platform:
    name: ${{ matrix.host-os }} / Python ${{ matrix.python-version }} / OpenMP ${{ matrix.openmp }}
    runs-on: ${{ matrix.host-os }}
    strategy:
      matrix:
        host-os: ["ubuntu-latest", "macos-10.15", "windows-latest"]
        python-version: ["3.7"]
        openmp: ["on", "off"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set OpenMP mode
        if: matrix.openmp == 'on'
        run: |
          export MODE="omp"
          echo "MODE=${MODE}" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: testenv
          allow-softlinks: true
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: flexible
          channels: conda-forge
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          show-channel-urls: true
          use-only-tar-bz2: false

      - name: Set up Visual Studio shell
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install build requirements with conda
        run: |
          set -vxeuo pipefail
          conda install -y cmake

      - name: Install OpenMP for macOS with conda
        if: runner.os == 'macOS' && matrix.openmp == 'on'
        run: |
          set -vxeuo pipefail
          conda install -y -c conda-forge llvm-openmp

      - name: Install mpi4py for Unix systems with conda
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          conda install -y -c conda-forge mpi4py openmpi

      - name: Build wheels
        run: |
          set -vxeuo pipefail
          cd clients/python
          python -VV
          python setup.py bdist_wheel --py-limited-api=cp36
          ls -la dist/*
          pip install -v dist/*.whl

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wheel-${{ matrix.host-os }}-openmp-${{ matrix.openmp }}
          path: clients/python/dist/*.whl

  run_tests:
    name: ${{ matrix.host-os }} / Python ${{ matrix.python-version }} / OpenMP ${{ matrix.openmp }}
    needs: build_wheel_once_per_platform
    runs-on: ${{ matrix.host-os }}
    strategy:
      matrix:
        host-os: ["ubuntu-latest", "macos-10.15", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9"]
        openmp: ["on", "off"]
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Set OpenMP mode
        if: matrix.openmp == 'on'
        run: |
          export MODE="omp"
          echo "MODE=${MODE}" >> $GITHUB_ENV

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: testenv
          allow-softlinks: true
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: flexible
          channels: conda-forge
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          show-channel-urls: true
          use-only-tar-bz2: false

      - name: Install mpi4py for Unix systems with conda
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          conda install -y -c conda-forge mpi4py openmpi

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: wheel-${{ matrix.host-os }}-openmp-${{ matrix.openmp }}

      - name: Install from the wheel
        run: |
          set -vxeuo pipefail
          python -VV
          python -m pip install -v srwpy*.whl

      - name: Install test requirements with pip
        run: |
          set -vxeuo pipefail
          cd clients/python
          python -m pip install -r requirements-dev.txt
          python -m pip list

      - name: Fast tests with pytest
        run: |
          set -vxeuo pipefail
          cd clients/python
          # Note: check `pytest.ini` for args and test paths.
          pytest -k fast

      - name: Slow tests with pytest
        run: |
          set -vxeuo pipefail
          cd clients/python
          # Note: check `pytest.ini` for args and test paths.
          pytest -k slow
