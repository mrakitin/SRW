name: Unit Tests

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      matrix:
        host-os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.7", "3.8", "3.9"]
      fail-fast: false

    runs-on: ${{ matrix.host-os }}

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: testenv
          allow-softlinks: true
          auto-activate-base: false
          auto-update-conda: true
          channel-priority: flexible
          channels: conda-forge
          miniconda-version: "latest"
          python-version: ${{ matrix.python-version }}
          show-channel-urls: true
          use-only-tar-bz2: false

      - name: Set up Visual Studio shell
        if: runner.os == 'Windows'
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Install build requirements
        run: |
          set -vxeuo pipefail
          conda install -y cmake

      - name: Build sdist and wheel and install *.whl
        run: |
          set -vxeuo pipefail
          cd python
          python -VV
          python setup.py sdist bdist_wheel
          ls -la dist/*
          pip install -v dist/*.whl

      - name: Install test requirements
        run: |
          set -vxeuo pipefail
          cd python
          python -m pip install -r requirements-dev.txt
          python -m pip list

      - name: Install mpi4py
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          conda install -y -c conda-forge mpi4py openmpi

      - name: Test with pytest
        run: |
          set -vxeuo pipefail
          cd python
          pytest -s -vv --import-mode=importlib srwpy/tests/ -k fast

      - name: Run test for example 8 (slow example)
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          cd examples/python
          cat SRWLIB_Example08.py | sed 's/nMacroElec = 50000/nMacroElec = 100/' > SRWLIB_Example08_100_particles.py
          mpirun --oversubscribe -n 4 python SRWLIB_Example08_100_particles.py
          cat __srwl_logs__/srwl_stat_wfr_emit_prop_multi_e_*.log
          rm -f -r __srwl_logs__

      - name: Run test for example 10 (slow example)
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          cd examples/python
          cat SRWLIB_Example10.py | sed 's/nMacroElec = 50000/nMacroElec = 100/' > SRWLIB_Example10_100_particles.py
          mpirun --oversubscribe -n 4 python SRWLIB_Example10_100_particles.py
          cat __srwl_logs__/srwl_stat_wfr_emit_prop_multi_e_*.log
          rm -f -r __srwl_logs__

      - name: Run test for example 11 (slow example)
        if: runner.os != 'Windows'
        run: |
          set -vxeuo pipefail
          cd examples/python
          cat SRWLIB_Example11.py | sed 's/nMacroElec = 50000/nMacroElec = 100/' > SRWLIB_Example11_100_particles.py
          mpirun --oversubscribe -n 4 python SRWLIB_Example11_100_particles.py
          cat __srwl_logs__/srwl_stat_wfr_emit_prop_multi_e_*.log
          rm -f -r __srwl_logs__

      # - name: Run test for example 12 (fast example, but requires CLI to execute it)
      #   run: |
      #     set -vxeuo pipefail
      #     cd examples/python
      #     python SRWLIB_Example12.py
      #     cat __srwl_logs__/srwl_stat_wfr_emit_prop_multi_e_*.log
      #     rm -f -r __srwl_logs__
